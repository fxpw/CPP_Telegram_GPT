name: Cross-Platform Build

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    env:
      app_name: cpp_telegram_gpt
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache vcpkg dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.vcpkg/archives
          vcpkg/installed
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-

    - name: Set up CMake
      run: |
        if [[ "$RUNNER_OS" == "Linux" ]]; then
          sudo apt-get update
          sudo apt-get install -y cmake
        elif [[ "$RUNNER_OS" == "Windows" ]]; then
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        fi
      shell: bash

    - name: Install vcpkg and setup environment
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        ./vcpkg/bootstrap-vcpkg.sh
        ./vcpkg/vcpkg integrate install
      shell: bash

    - name: Build the project on Linux
      if: runner.os == 'Linux'
      run: |
        mkdir build
        cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-linux
        cmake --build build --config Release -- -j 4
      shell: bash

    - name: Build the project on Windows
      if: runner.os == 'Windows'
      run: |
        mkdir build
        cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows
        cmake --build build --config Release -- /m
      shell: cmd

    - name: Archive files on Linux
      if: runner.os == 'Linux'
      run: tar czf $app_name.tar.gz build/$app_name build/.env
      shell: bash
      env:
        app_name: ${{ env.app_name }}

    - name: Archive files on Windows
      if: runner.os == 'Windows'
      run: Compress-Archive -Path build/$env:app_name, build/.env -DestinationPath $env:app_name.zip -Force
      shell: powershell
      env:
        app_name: ${{ env.app_name }}

    - name: Upload archive
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.app_name }}-${{ matrix.os }}
        path: |
          ${{ env.app_name }}.*
